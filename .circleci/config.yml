version: 2.1 # use CircleCI 2.0
jobs: # basic units of work in a run
  test: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/repo
    docker: # run the steps with Docker
      - image: circleci/golang:1.16
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory
      - run:
         name: install dependencies
         command: go mod download
      - run:
         name: test
         command: go test -run "^Test(G|P)"
      - run:
         name: test pacts
         command: |
          go test -run "(Contracts)$"
  dockerize: 
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: |
          # TAG=0.1.<< pipeline.number >>
          docker build -t m7rahm/innov-back:$CIRCLE_BRANCH .
          echo "$DOCKER_ATOKEN" | docker login -u m7rahm --password-stdin
          docker push m7rahm/innov-back:$CIRCLE_BRANCH
workflows:
  build_and_test:
    jobs:
      - test
      - dockerize:
          requires:
            - test